<units:ShowcaseItem
    x:Class="OpenSilverShowcase.AnimationTools.Examples.BasicItem"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:units="clr-namespace:OpenSilverShowcase.Support.UI.Units;assembly=OpenSilverShowcase.Support"
    Description="fundamentals of button styling with colors, fonts, and images."
    Title="Basic"
    Order="1">
    <units:ShowcaseItem.CodeSources>
        <units:CodeSource Key="xaml" Source="/Examples/BasicItem.xaml"/>
        <units:CodeSource Key="xaml.cs" Source="/Examples/BasicItem.xaml.cs"/>
    </units:ShowcaseItem.CodeSources>
    <units:ShowcaseItem.DemoContent>
        <Grid>
            <Grid.Resources>
                <!--  Translation Animation  -->
                <Storyboard x:Key="TranslationAnimation">
                    <DoubleAnimation x:Name="TranslationAnimation"
                             Storyboard.TargetName="AnimatedRectangle"
                             Storyboard.TargetProperty="(Canvas.Left)"
                             From="{Binding ElementName=AnimatedRectangle, Path=(Canvas.Left)}"
                             To="100"/>
                </Storyboard>

                <!--  Rotation Animation  -->
                <Storyboard x:Key="RotationAnimation">
                    <DoubleAnimation x:Name="RotateAnimation"
                             Storyboard.TargetName="AnimatedRectangle"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                             From="0"
                             To="360"/>
                </Storyboard>

                <!--  Scale Animation  -->
                <Storyboard x:Key="ScaleAnimation">
                    <DoubleAnimation x:Name="ScaleXAnimation"
                             Storyboard.TargetName="AnimatedRectangle"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                             From="1.0"
                             To="1.5"/>
                    <DoubleAnimation x:Name="ScaleYAnimation"
                             Storyboard.TargetName="AnimatedRectangle"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                             From="1.0"
                             To="1.2"/>
                </Storyboard>

                <!--  Opacity Animation  -->
                <Storyboard x:Key="OpacityAnimation">
                    <DoubleAnimation x:Name="OpacityAnimation"
                             Storyboard.TargetName="AnimatedRectangle"
                             Storyboard.TargetProperty="Opacity"
                             From="1.0"
                             To="0.2"/>
                </Storyboard>

                <!--  Color Change Animation  -->
                <Storyboard x:Key="ColorAnimation">
                    <ColorAnimation x:Name="ColorChangeAnimation"
                            Storyboard.TargetName="AnimatedRectangle"
                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                            From="#FF4500"
                            To="Blue"/>
                </Storyboard>

                <!--  Keyframe Animation  -->
                <Storyboard x:Key="KeyframeAnimation">
                    <!--  Left position keyframes  -->
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="AnimatedRectangle" Storyboard.TargetProperty="(Canvas.Left)">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding ElementName=AnimatedRectangle, Path=(Canvas.Left)}"/>
                        <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="480">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <QuadraticEase/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                        <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="240">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <BounceEase Bounces="3"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                        <EasingDoubleKeyFrame KeyTime="0:0:1.35" Value="{Binding ElementName=AnimatedRectangle, Path=(Canvas.Left)}">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <CircleEase/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>

                    <!--  Top position keyframes  -->
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="AnimatedRectangle" Storyboard.TargetProperty="(Canvas.Top)">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding ElementName=AnimatedRectangle, Path=(Canvas.Top)}"/>
                        <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="50">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <BackEase Amplitude="0.3"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                        <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="180">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <PowerEase Power="3"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                        <EasingDoubleKeyFrame KeyTime="0:0:1.35" Value="{Binding ElementName=AnimatedRectangle, Path=(Canvas.Top)}">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <SineEase/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>

                    <!--  Rotation keyframes  -->
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="AnimatedRectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                        <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="90">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <ExponentialEase/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                        <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="270">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <QuarticEase/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                        <EasingDoubleKeyFrame KeyTime="0:0:1.35" Value="360">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <QuinticEase/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>

                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Margin" Value="0,0,0,5"/>
                    <Setter Property="SelectedIndex" Value="0"/>
                </Style>
                <Style TargetType="NumericUpDown">
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Margin" Value="0,0,0,5"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="DecimalPlaces" Value="1"/>
                </Style>
            </Grid.Resources>

            <ContentControl>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <ContentControl Content="Animation Tool"
                            Foreground="#FF4A9EF5"/>

                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="100"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock FontSize="12"
                           Text="Choose animation types and customize their properties"
                           TextWrapping="Wrap"/>

                        <!--  Animation Canvas  -->
                        <Border Grid.Row="1"
                        Margin="0,10"
                        Background="{DynamicResource Theme_AlternateRowBrush}"
                        BorderBrush="{DynamicResource Theme_BorderBrush}"
                        BorderThickness="1">
                            <Canvas x:Name="AnimationCanvas">
                                <Border x:Name="AnimatedRectangle"
                                Canvas.Left="50"
                                Canvas.Top="14"
                                Width="50"
                                Height="50"
                                Background="#FF4500"
                                CornerRadius="5">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="10"
                                                  Opacity="0.5"
                                                  ShadowDepth="5"
                                                  Color="Black"/>
                                    </Border.Effect>
                                </Border>
                            </Canvas>
                        </Border>

                        <Grid Grid.Row="2" Margin="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid Margin="0,0,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!--  Animation Type  -->
                                <TextBlock Grid.ColumnSpan="2"
                                   Margin="0,0,0,5"
                                   FontWeight="Bold"
                                   Text="Example Animation:"/>
                                <ComboBox x:Name="AnimationTypeComboBox"
                                  Grid.Row="1"
                                  Grid.ColumnSpan="2">
                                    <ComboBoxItem Content="Translation (Move)"/>
                                    <ComboBoxItem Content="Rotation"/>
                                    <ComboBoxItem Content="Scale"/>
                                    <ComboBoxItem Content="Opacity"/>
                                    <ComboBoxItem Content="Color Change"/>
                                    <ComboBoxItem Content="Keyframe Animation"/>
                                </ComboBox>

                                <!--  Duration  -->
                                <TextBlock Grid.Row="2" Text="Duration (s)"/>
                                <NumericUpDown x:Name="DurationNumericUpDown"
                                       Grid.Row="2"
                                       Grid.Column="1"
                                       Minimum="0.1"
                                       Value="2"/>

                                <!--  BeginTime  -->
                                <TextBlock Grid.Row="3" Text="BeginTime (s)"/>
                                <NumericUpDown x:Name="BeginTimeNumericUpDown"
                                       Grid.Row="3"
                                       Grid.Column="1"/>

                                <!--  FillBehavior  -->
                                <TextBlock Grid.Row="4" Text="FillBehavior"/>
                                <ComboBox x:Name="FillBehaviorComboBox"
                                  Grid.Row="4"
                                  Grid.ColumnSpan="2"
                                  HorizontalAlignment="Right"/>

                                <!--  Repeat Count  -->
                                <TextBlock x:Name="RepeatCountLabel"
                                   Grid.Row="5"
                                   Text="Repeat Count"/>
                                <NumericUpDown x:Name="RepeatCountNumericUpDown"
                                       Grid.Row="5"
                                       Grid.Column="1"
                                       Minimum="0.1"
                                       Value="1"/>

                                <!--  Repeat Forever  -->
                                <CheckBox x:Name="RepeatForeverCheckBox"
                                  Grid.Row="6"
                                  Grid.ColumnSpan="2"
                                  Checked="RepeatForeverCheckBoxStateChanged"
                                  Content="Repeat Forever"
                                  FontSize="11"
                                  Unchecked="RepeatForeverCheckBoxStateChanged"/>

                                <!--  Speed Ratio  -->
                                <TextBlock Grid.Row="7" Text="Speed Ratio"/>
                                <NumericUpDown x:Name="SpeedRatioNumericUpDown"
                                       Grid.Row="7"
                                       Grid.Column="1"
                                       Minimum="0.1"
                                       Value="1"/>

                                <!--  Repeat Forever  -->
                                <CheckBox x:Name="AutoReverseCheckBox"
                                  Grid.Row="8"
                                  Grid.ColumnSpan="2"
                                  Content="Auto Reverse"
                                  FontSize="11"/>
                            </Grid>

                            <!--  Easing Options  -->
                            <StackPanel Grid.Column="1" Margin="5,0,0,0">
                                <TextBlock Margin="0,0,0,5"
                                   FontWeight="Bold"
                                   Text="Easing Function:"/>
                                <ComboBox x:Name="EasingFunctionComboBox">
                                    <ComboBoxItem Content="BackEase"/>
                                    <ComboBoxItem Content="BounceEase"/>
                                    <ComboBoxItem Content="CircleEase"/>
                                    <ComboBoxItem Content="CubicEase"/>
                                    <ComboBoxItem Content="ExponentialEase"/>
                                    <ComboBoxItem Content="PowerEase"/>
                                    <ComboBoxItem Content="QuadraticEase"/>
                                    <ComboBoxItem Content="QuarticEase"/>
                                    <ComboBoxItem Content="QuinticEase"/>
                                    <ComboBoxItem Content="SineEase"/>
                                    <ComboBoxItem Content="ElasticEase"/>
                                </ComboBox>

                                <TextBlock Text="EasingMode"/>
                                <ComboBox x:Name="EasingModeComboBox"/>

                                <Grid>
                                    <StackPanel x:Name="BackEaseProperties">
                                        <TextBlock Text="Amplitude"/>
                                        <NumericUpDown x:Name="BackEaseAmplitudeNumericUpDown" Value="1"/>
                                    </StackPanel>

                                    <!--  BounceEase Properties  -->
                                    <StackPanel x:Name="BounceEaseProperties" Visibility="Collapsed">
                                        <TextBlock Text="Bounces"/>
                                        <NumericUpDown x:Name="BounceEaseBouncesNumericUpDown"
                                               DecimalPlaces="0"
                                               Value="3"/>

                                        <TextBlock Text="Bounciness"/>
                                        <NumericUpDown x:Name="BounceEaseBouncinesNumericUpDown"
                                               Minimum="0.1"
                                               Value="2"/>
                                    </StackPanel>

                                    <!--  ExponentialEase Properties  -->
                                    <StackPanel x:Name="ExponentialEaseProperties" Visibility="Collapsed">
                                        <TextBlock Text="Exponent"/>
                                        <NumericUpDown x:Name="ExponentialEaseExponentNumericUpDown" Value="2"/>
                                    </StackPanel>

                                    <!--  PowerEase Properties  -->
                                    <StackPanel x:Name="PowerEaseProperties" Visibility="Collapsed">
                                        <TextBlock Text="Power"/>
                                        <NumericUpDown x:Name="PowerEasePowerNumericUpDown" Value="2"/>
                                    </StackPanel>

                                    <!--  ElasticEase Properties  -->
                                    <StackPanel x:Name="ElasticEaseProperties" Visibility="Collapsed">
                                        <TextBlock Text="Oscillations"/>
                                        <NumericUpDown x:Name="ElasticEaseOscillationsNumericUpDown"
                                               DecimalPlaces="0"
                                               Value="3"/>

                                        <TextBlock Text="Springiness"/>
                                        <NumericUpDown x:Name="ElasticEaseSpringinessNumericUpDown" Value="3"/>
                                    </StackPanel>
                                </Grid>
                            </StackPanel>

                            <!--  Buttons - spans two columns  -->
                            <StackPanel Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Margin="0,15,0,0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                                <Button x:Name="PlayButton"
                                Margin="0,0,5,0"
                                Click="PlayButton_Click"
                                Content="Play"/>

                                <Button x:Name="PauseResumeButton"
                                Margin="5,0"
                                Click="PauseResumeButton_Click"
                                Content="Pause"
                                IsEnabled="False"/>

                                <Button x:Name="StopButton"
                                Margin="5,0,0,0"
                                Click="StopButton_Click"
                                Content="Stop"
                                IsEnabled="False"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Grid>
            </ContentControl>
        </Grid>
    </units:ShowcaseItem.DemoContent>
</units:ShowcaseItem>
