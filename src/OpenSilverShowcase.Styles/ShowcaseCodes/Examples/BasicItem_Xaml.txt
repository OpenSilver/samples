<units:ShowcaseItem
    x:Class="OpenSilverShowcase.Styles.Examples.BasicItem"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:units="clr-namespace:OpenSilverShowcase.Support.UI.Units;assembly=OpenSilverShowcase.Support"
    Description="fundamentals of button styling with colors, fonts, and images."
    Title="Basic"
    Order="1">
    <units:ShowcaseItem.CodeSources>
        <units:CodeSource Key="xaml" Source="/Examples/BasicItem.xaml"/>
        <units:CodeSource Key="xaml.cs" Source="/Examples/BasicItem.xaml.cs"/>
    </units:ShowcaseItem.CodeSources>
    <units:ShowcaseItem.DemoContent>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ContentControl Content="Styles" Foreground="#FF89B8AD" Background="#FF8FCBBE"/>
            <TextBlock Grid.Row="1" Foreground="Gray" FontSize="16" TextWrapping="Wrap" TextAlignment="Center" Margin="0,0,0,15">
                To understand styles better, read <Hyperlink NavigateUri="https://learn.microsoft.com/en-us/previous-versions/windows/silverlight/dotnet-windows-silverlight/ms603146(v=vs.95)" TargetName="_blank">this</Hyperlink> (interesting keywords are "scoping rules", "implicit", and "BasedOn").
            </TextBlock>

            <StackPanel Grid.Row="2">
                <StackPanel.Resources>
                    <Style x:Key="MyTextBlockStyle" TargetType="TextBlock">
                        <Style.Setters>
                            <Setter Property="Foreground" Value="#FF5E5E96"/>
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="FontSize" Value="14"/>
                            <Setter Property="TextAlignment" Value="Center"/>
                            <Setter Property="FontFamily" Value="Georgia"/>
                            <Setter Property="Margin" Value="0,5,0,5"/>
                        </Style.Setters>
                    </Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource MyTextBlockStyle}">
                        <Style.Setters>
                            <Setter Property="Foreground" Value="DarkRed"/>
                            <Setter Property="FontWeight" Value="bold"/>
                        </Style.Setters>
                    </Style>
                </StackPanel.Resources>
                <TextBlock Text="This TextBlock has a custom Style which sets a few properties" />
                <TextBlock Text="This TextBlock has an implicit Style based on the custom one above, overwriting the Foreground property value, and making the text bold."/>
                <Border>
                    <Border.Resources>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource MyTextBlockStyle}">
                            <Style.Setters>
                                <Setter Property="Foreground" Value="Purple"/>
                                <Setter Property="FontStyle" Value="Italic"/>
                            </Style.Setters>
                        </Style>
                    </Border.Resources>
                    <TextBlock Text="This TextBlock also has an implicit Style based on the custom one, but defined in a narrowed scope so it takes precedence over the other implicit Style."/>
                </Border>
            </StackPanel>
        </Grid>
    </units:ShowcaseItem.DemoContent>
</units:ShowcaseItem>
